How did viewing a diff between two versions of a file help you see the bug that was introduced?

diff -u conveniently places the removed and added lines right next to each other so it's easy to spot the differences

having short lines to read also made the spelling mistake easy to spot

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

This would be useful for reverting buggy code back to the previous version that worked or for fixing buggy changes by comparing them to the previous code.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros:
 - commits are more likely to make logical sense
 - don't need to understand how the auto save feature works

 Cons:
 - forgetful users may not commit often enough
 - the burden is on the coder to decide when to commit

 Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

 Files in Google Docs are the atomic unit and so it only makes to track a version of each file separately.

 However, each program or coding project consists of multiple files and so it makes sense for Git to save all of these related files in one commit.

 How can you use the commands git log and git diff to view the history of files?

 git log shows a running history of commits with an id, author, time, and message.  The messages will help you quickly find where a feature was added or a bug was fixed.

 git diff shows you the details of a specific git commit.  This will show you the specific lines of code that changed between two commits.

 How might using version control make you more confident to make changes that could break something?

 If I can easily restore my project using git then I can work on changes without fear of irreparably breaking my project.

 Now that you have your workspace set up, what do you want to try using Git for?

 I should probably be using git for my iPhone apps.  Git should solve some of the issues I have with making large changes and then having to track down breaks.