When would you want to use a remote repository rather than keeping all your work local?

When using multiple computers to work on the same project.  When collaborating with other contributors on the same project.
In both of these cases, a remote repository collects everyone submissions in one place.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Automatic merging:
Pros:
automatic, no effort
fast

Cons:
can't handle ambiguous situations

Manaul merging:
Pros:
alerts author to all changes
necessary for ambiguous situations

Cons:
takes effort
isn't necessary for unambiguous situations

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

The remote repository may receive updates from another contributor that are incompatible with your changes.
If the repository updated automatically you might be frequently spending time merging your changes into the latest version of the repository.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Creating a fork is like cloning a repository from another user.
Creating a clone is when you want the same repository to exist in multiple places.
Creating a branch is when you want to experiment with code changes without impacting the master branch.

What is the benefit of having a copy of the last known state of the remote stored locally?

If a copy of the remote is stored locally you will be able to merge your changes without pulling the remote branch beforehand.